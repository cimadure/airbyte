"use strict";(self.webpackChunkdocu=self.webpackChunkdocu||[]).push([[88611],{73800:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>p,contentTitle:()=>l,default:()=>k,frontMatter:()=>i,metadata:()=>o,toc:()=>s});var r=a(87462),n=(a(67294),a(3905));const i={},l="S3",o={unversionedId:"integrations/sources/s3",id:"integrations/sources/s3",title:"S3",description:"This page contains the setup guide and reference information for the Amazon S3 source connector.",source:"@site/../docs/integrations/sources/s3.md",sourceDirName:"integrations/sources",slug:"/integrations/sources/s3",permalink:"/integrations/sources/s3",draft:!1,editUrl:"https://github.com/airbytehq/airbyte/blob/master/docs/../docs/integrations/sources/s3.md",tags:[],version:"current",frontMatter:{},sidebar:"mySidebar",previous:{title:"RSS",permalink:"/integrations/sources/rss"},next:{title:"S3 Migration Guide",permalink:"/integrations/sources/s3-migrations"}},p={},s=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Setup guide",id:"setup-guide",level:2},{value:"Step 1: Set up Amazon S3",id:"step-1-set-up-amazon-s3",level:3},{value:"Step 2: Set up the Amazon S3 connector in Airbyte",id:"step-2-set-up-the-amazon-s3-connector-in-airbyte",level:3},{value:"Supported sync modes",id:"supported-sync-modes",level:2},{value:"File Compressions",id:"file-compressions",level:2},{value:"Path Patterns",id:"path-patterns",level:2},{value:"User Schema",id:"user-schema",level:2},{value:"S3 Provider Settings",id:"s3-provider-settings",level:2},{value:"File Format Settings",id:"file-format-settings",level:2},{value:"CSV",id:"csv",level:3},{value:"Parquet",id:"parquet",level:3},{value:"Avro",id:"avro",level:3},{value:"JSONL",id:"jsonl",level:3},{value:"Changelog",id:"changelog",level:2}],m={toc:s},d="wrapper";function k(t){let{components:e,...a}=t;return(0,n.kt)(d,(0,r.Z)({},m,a,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"s3"},"S3"),(0,n.kt)("p",null,"This page contains the setup guide and reference information for the Amazon S3 source connector."),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("p",{parentName:"admonition"},"Please note that using cloud storage may incur egress costs. Egress refers to data that is transferred out of the cloud storage system, such as when you download files or access them from a different location. For detailed information on egress costs, please consult the ",(0,n.kt)("a",{parentName:"p",href:"https://aws.amazon.com/s3/pricing/"},"Amazon S3 pricing guide"),".")),(0,n.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Access to the S3 bucket containing the files to replicate.")),(0,n.kt)("h2",{id:"setup-guide"},"Setup guide"),(0,n.kt)("h3",{id:"step-1-set-up-amazon-s3"},"Step 1: Set up Amazon S3"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"If you are syncing from a private bucket"),", you will need to provide your ",(0,n.kt)("inlineCode",{parentName:"p"},"AWS Access Key ID")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"AWS Secret Access Key")," to authenticate the connection, and ensure that the IAM user associated with the credentials has ",(0,n.kt)("inlineCode",{parentName:"p"},"read")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"list")," permissions for the bucket. If you are unfamiliar with configuring AWS permissions, you can follow these steps to obtain the necessary permissions and credentials:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Log in to your Amazon AWS account and open the ",(0,n.kt)("a",{parentName:"li",href:"https://console.aws.amazon.com/iam/home#home"},"IAM console"),"."),(0,n.kt)("li",{parentName:"ol"},"In the IAM dashboard, select ",(0,n.kt)("strong",{parentName:"li"},"Policies"),", then click ",(0,n.kt)("strong",{parentName:"li"},"Create Policy"),"."),(0,n.kt)("li",{parentName:"ol"},"Select the ",(0,n.kt)("strong",{parentName:"li"},"JSON")," tab, then paste the following JSON into the Policy editor (be sure to substitute in your bucket name):")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},'{\n    "Version": "2012-10-17",\n    "Statement": [\n        {\n        "Effect": "Allow",\n        "Action": [\n                "s3:GetObject",\n                "s3:ListBucket"\n        ],\n        "Resource": [\n                "arn:aws:s3:::{your-bucket-name}/*",\n                "arn:aws:s3:::{your-bucket-name}"\n        ]\n        }\n    ]\n}\n')),(0,n.kt)("ol",{start:4},(0,n.kt)("li",{parentName:"ol"},"Give your policy a descriptive name, then click ",(0,n.kt)("strong",{parentName:"li"},"Create policy"),"."),(0,n.kt)("li",{parentName:"ol"},"In the IAM dashboard, click ",(0,n.kt)("strong",{parentName:"li"},"Users"),". Select an existing IAM user or create a new one by clicking ",(0,n.kt)("strong",{parentName:"li"},"Add users"),"."),(0,n.kt)("li",{parentName:"ol"},"If you are using an ",(0,n.kt)("em",{parentName:"li"},"existing")," IAM user, click the ",(0,n.kt)("strong",{parentName:"li"},"Add permissions")," dropdown menu and select ",(0,n.kt)("strong",{parentName:"li"},"Add permissions"),". If you are creating a ",(0,n.kt)("em",{parentName:"li"},"new")," user, you will be taken to the Permissions screen after selecting a name."),(0,n.kt)("li",{parentName:"ol"},"Select ",(0,n.kt)("strong",{parentName:"li"},"Attach policies directly"),", then find and check the box for your new policy. Click ",(0,n.kt)("strong",{parentName:"li"},"Next"),", then ",(0,n.kt)("strong",{parentName:"li"},"Add permissions"),"."),(0,n.kt)("li",{parentName:"ol"},"After successfully creating your user, select the ",(0,n.kt)("strong",{parentName:"li"},"Security credentials")," tab and click ",(0,n.kt)("strong",{parentName:"li"},"Create access key"),". You will be prompted to select a use case and add optional tags to your access key. Click ",(0,n.kt)("strong",{parentName:"li"},"Create access key")," to generate the keys.")),(0,n.kt)("admonition",{type:"caution"},(0,n.kt)("p",{parentName:"admonition"},"Your ",(0,n.kt)("inlineCode",{parentName:"p"},"Secret Access Key")," will only be visible once upon creation. Be sure to copy and store it securely for future use.")),(0,n.kt)("p",null,"For more information on managing your access keys, please refer to the\n",(0,n.kt)("a",{parentName:"p",href:"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_access-keys.html"},"official AWS documentation"),"."),(0,n.kt)("h3",{id:"step-2-set-up-the-amazon-s3-connector-in-airbyte"},"Step 2: Set up the Amazon S3 connector in Airbyte"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("a",{parentName:"li",href:"https://cloud.airbyte.com/workspaces"},"Log in to your Airbyte Cloud")," account, or navigate to your Airbyte Open Source dashboard."),(0,n.kt)("li",{parentName:"ol"},"In the left navigation bar, click ",(0,n.kt)("strong",{parentName:"li"},"Sources"),". In the top-right corner, click ",(0,n.kt)("strong",{parentName:"li"},"+ New source"),"."),(0,n.kt)("li",{parentName:"ol"},"Find and select ",(0,n.kt)("strong",{parentName:"li"},"S3")," from the list of available sources."),(0,n.kt)("li",{parentName:"ol"},"Enter the name of the ",(0,n.kt)("strong",{parentName:"li"},"Bucket")," containing your files to replicate."),(0,n.kt)("li",{parentName:"ol"},"Add a stream",(0,n.kt)("ol",{parentName:"li"},(0,n.kt)("li",{parentName:"ol"},"Write the ",(0,n.kt)("strong",{parentName:"li"},"File Type")),(0,n.kt)("li",{parentName:"ol"},"In the ",(0,n.kt)("strong",{parentName:"li"},"Format")," box, use the dropdown menu to select the format of the files you'd like to replicate. The supported formats are ",(0,n.kt)("strong",{parentName:"li"},"CSV"),", ",(0,n.kt)("strong",{parentName:"li"},"Parquet"),", ",(0,n.kt)("strong",{parentName:"li"},"Avro")," and ",(0,n.kt)("strong",{parentName:"li"},"JSONL"),". Toggling the ",(0,n.kt)("strong",{parentName:"li"},"Optional fields")," button within the ",(0,n.kt)("strong",{parentName:"li"},"Format")," box will allow you to enter additional configurations based on the selected format.  For a detailed breakdown of these settings, refer to the ",(0,n.kt)("a",{parentName:"li",href:"#file-format-settings"},"File Format section")," below."),(0,n.kt)("li",{parentName:"ol"},"Give a ",(0,n.kt)("strong",{parentName:"li"},"Name")," to the stream"),(0,n.kt)("li",{parentName:"ol"},"(Optional) - If you want to enforce a specific schema, you can enter a ",(0,n.kt)("strong",{parentName:"li"},"Input schema"),". By default, this value is set to ",(0,n.kt)("inlineCode",{parentName:"li"},"{}")," and will automatically infer the schema from the file","(","s",")"," you are replicating. For details on providing a custom schema, refer to the ",(0,n.kt)("a",{parentName:"li",href:"#user-schema"},"User Schema section"),"."),(0,n.kt)("li",{parentName:"ol"},"Optionally, enter the ",(0,n.kt)("strong",{parentName:"li"},"Globs")," which dictates which files to be synced. This is a regular expression that allows Airbyte to pattern match the specific files to replicate. If you are replicating all the files within your bucket, use ",(0,n.kt)("inlineCode",{parentName:"li"},"**")," as the pattern. For more precise pattern matching options, refer to the ",(0,n.kt)("a",{parentName:"li",href:"#path-patterns"},"Path Patterns section")," below."))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"If you are syncing from a private bucket"),", you must fill the ",(0,n.kt)("strong",{parentName:"li"},"AWS Access Key ID")," and ",(0,n.kt)("strong",{parentName:"li"},"AWS Secret Access Key")," fields with the appropriate credentials to authenticate the connection. All other fields are optional and can be left empty. Refer to the ",(0,n.kt)("a",{parentName:"li",href:"#s3-provider-settings"},"S3 Provider Settings section")," below for more information on each field.")),(0,n.kt)("h2",{id:"supported-sync-modes"},"Supported sync modes"),(0,n.kt)("p",null,"The Amazon S3 source connector supports the following ",(0,n.kt)("a",{parentName:"p",href:"https://docs.airbyte.com/cloud/core-concepts#connection-sync-modes"},"sync modes"),":"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Feature"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Supported?"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Full Refresh Sync"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Yes")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Incremental Sync"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Yes")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Replicate Incremental Deletes"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Replicate Multiple Files ","(","pattern matching",")"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Yes")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Replicate Multiple Streams ","(","distinct tables",")"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Yes")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Namespaces"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No")))),(0,n.kt)("h2",{id:"file-compressions"},"File Compressions"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Compression"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Supported?"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Gzip"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Yes")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Zip"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Bzip2"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Yes")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Lzma"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Xz"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Snappy"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No")))),(0,n.kt)("p",null,"Please let us know any specific compressions you'd like to see support for next!"),(0,n.kt)("h2",{id:"path-patterns"},"Path Patterns"),(0,n.kt)("p",null,"(","tl;dr -",">"," path pattern syntax using ",(0,n.kt)("a",{parentName:"p",href:"https://facelessuser.github.io/wcmatch/glob/"},"wcmatch.glob"),". GLOBSTAR and SPLIT flags are enabled.",")"),(0,n.kt)("p",null,"This connector can sync multiple files by using glob-style patterns, rather than requiring a specific path for every file. This enables:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Referencing many files with just one pattern, e.g. ",(0,n.kt)("inlineCode",{parentName:"li"},"**")," would indicate every file in the bucket."),(0,n.kt)("li",{parentName:"ul"},"Referencing future files that don't exist yet ","(","and therefore don't have a specific path",")",".")),(0,n.kt)("p",null,"You must provide a path pattern. You can also provide many patterns split with ","|"," for more complex directory layouts."),(0,n.kt)("p",null,"Each path pattern is a reference from the ",(0,n.kt)("em",{parentName:"p"},"root")," of the bucket, so don't include the bucket name in the pattern","(","s",")","."),(0,n.kt)("p",null,"Some example patterns:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"**")," : match everything."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"**/*.csv")," : match all files with specific extension."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"myFolder/**/*.csv")," : match all csv files anywhere under myFolder."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"*/**")," : match everything at least one folder deep."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"*/*/*/**")," : match everything at least three folders deep."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"**/file.*|**/file"),' : match every file called "file" with any extension ',"(","or no extension",")","."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"x/*/y/*")," : match all files that sit in folder x -",">"," any folder -",">"," folder y."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"**/prefix*.csv")," : match all csv files with specific prefix."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"**/prefix*.parquet")," : match all parquet files with specific prefix.")),(0,n.kt)("p",null,"Let's look at a specific example, matching the following bucket layout:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-text"},"myBucket\n    -> log_files\n    -> some_table_files\n        -> part1.csv\n        -> part2.csv\n    -> images\n    -> more_table_files\n        -> part3.csv\n    -> extras\n        -> misc\n            -> another_part1.csv\n")),(0,n.kt)("p",null,"We want to pick up part1.csv, part2.csv and part3.csv ","(","excluding another_part1.csv for now",")",". We could do this a few different ways:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},'We could pick up every csv file called "partX" with the single pattern ',(0,n.kt)("inlineCode",{parentName:"li"},"**/part*.csv"),"."),(0,n.kt)("li",{parentName:"ul"},"To be a bit more robust, we could use the dual pattern ",(0,n.kt)("inlineCode",{parentName:"li"},"some_table_files/*.csv|more_table_files/*.csv")," to pick up relevant files only from those exact folders."),(0,n.kt)("li",{parentName:"ul"},"We could achieve the above in a single pattern by using the pattern ",(0,n.kt)("inlineCode",{parentName:"li"},"*table_files/*.csv"),". This could however cause problems in the future if new unexpected folders started being created."),(0,n.kt)("li",{parentName:"ul"},"We can also recursively wildcard, so adding the pattern ",(0,n.kt)("inlineCode",{parentName:"li"},"extras/**/*.csv"),' would pick up any csv files nested in folders below "extras", such as "extras/misc/another_part1.csv".')),(0,n.kt)("p",null,"As you can probably tell, there are many ways to achieve the same goal with path patterns. We recommend using a pattern that ensures clarity and is robust against future additions to the directory structure."),(0,n.kt)("h2",{id:"user-schema"},"User Schema"),(0,n.kt)("p",null,"Providing a schema allows for more control over the output of this stream. Without a provided schema, columns and datatypes will be inferred from the first created file in the bucket matching your path pattern and suffix. This will probably be fine in most cases but there may be situations you want to enforce a schema instead, e.g.:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"You only care about a specific known subset of the columns. The other columns would all still be included, but packed into the ",(0,n.kt)("inlineCode",{parentName:"li"},"_ab_additional_properties")," map."),(0,n.kt)("li",{parentName:"ul"},"Your initial dataset is quite small ","(","in terms of number of records",")",", and you think the automatic type inference from this sample might not be representative of the data in the future."),(0,n.kt)("li",{parentName:"ul"},"You want to purposely define types for every column."),(0,n.kt)("li",{parentName:"ul"},"You know the names of columns that will be added to future data and want to include these in the core schema as columns rather than have them appear in the ",(0,n.kt)("inlineCode",{parentName:"li"},"_ab_additional_properties")," map.")),(0,n.kt)("p",null,"Or any other reason! The schema must be provided as valid JSON as a map of ",(0,n.kt)("inlineCode",{parentName:"p"},'{"column": "datatype"}')," where each datatype is one of:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"string"),(0,n.kt)("li",{parentName:"ul"},"number"),(0,n.kt)("li",{parentName:"ul"},"integer"),(0,n.kt)("li",{parentName:"ul"},"object"),(0,n.kt)("li",{parentName:"ul"},"array"),(0,n.kt)("li",{parentName:"ul"},"boolean"),(0,n.kt)("li",{parentName:"ul"},"null")),(0,n.kt)("p",null,"For example:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},'{"id": "integer", "location": "string", "longitude": "number", "latitude": "number"}'),(0,n.kt)("li",{parentName:"ul"},'{"username": "string", "friends": "array", "information": "object"}')),(0,n.kt)("admonition",{type:"note"},(0,n.kt)("p",{parentName:"admonition"},"Please note, the S3 Source connector used to infer schemas from all the available files and then merge them to create a superset schema. Starting from version 2.0.0 the schema inference works based on the first file found only. The first file we consider is the oldest one written to the prefix.")),(0,n.kt)("h2",{id:"s3-provider-settings"},"S3 Provider Settings"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"AWS Access Key ID"),": One half of the ",(0,n.kt)("a",{parentName:"p",href:"https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys"},"required credentials")," for accessing a private bucket.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"AWS Secret Access Key"),": The other half of the ",(0,n.kt)("a",{parentName:"p",href:"https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys"},"required credentials")," for accessing a private bucket.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Path Prefix"),": An optional string that limits the files returned by AWS when listing files to only those starting with the specified prefix. This is different than the ",(0,n.kt)("strong",{parentName:"p"},"Path Pattern"),", as the prefix is applied directly to the API call made to S3, rather than being filtered within Airbyte. ",(0,n.kt)("strong",{parentName:"p"},"This is not a regular expression")," and does not accept pattern-style symbols like wildcards (",(0,n.kt)("inlineCode",{parentName:"p"},"*"),"). We recommend using this filter to improve performance if the connector if your bucket has many folders and files that are unrelated to the data you want to replicate, and all the relevant files will always reside under the specified prefix."),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Together with the ",(0,n.kt)("strong",{parentName:"p"},"Path Pattern"),", there are multiple ways to specify the files to sync. For example, all the following configurations are equivalent:"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Prefix")," = ",(0,n.kt)("inlineCode",{parentName:"li"},"<empty>"),", ",(0,n.kt)("strong",{parentName:"li"},"Pattern")," = ",(0,n.kt)("inlineCode",{parentName:"li"},"path1/path2/myFolder/**/*")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Prefix")," = ",(0,n.kt)("inlineCode",{parentName:"li"},"path1/"),", ",(0,n.kt)("strong",{parentName:"li"},"Pattern")," = ",(0,n.kt)("inlineCode",{parentName:"li"},"path2/myFolder/**/*.csv")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Prefix")," = ",(0,n.kt)("inlineCode",{parentName:"li"},"path1/path2/"),", ",(0,n.kt)("strong",{parentName:"li"},"Pattern")," = ",(0,n.kt)("inlineCode",{parentName:"li"},"myFolder/**/*.csv")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Prefix")," = ",(0,n.kt)("inlineCode",{parentName:"li"},"path1/path2/myFolder/"),", ",(0,n.kt)("strong",{parentName:"li"},"Pattern")," = ",(0,n.kt)("inlineCode",{parentName:"li"},"**/*.csv")))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"The ability to individually configure the prefix and pattern has been included to accommodate situations where you do not want to replicate the majority of the files in the bucket. If you are unsure of the best approach, you can safely leave the ",(0,n.kt)("strong",{parentName:"p"},"Path Prefix")," field empty and just ",(0,n.kt)("a",{parentName:"p",href:"#path-patterns"},"set the Path Pattern")," to meet your requirements.")))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Endpoint"),": An optional parameter that enables the use of non-Amazon S3 compatible services. If you are using the default Amazon service, leave this field blank.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Start Date"),": An optional parameter that marks a starting date and time in UTC for data replication. Any files that have ",(0,n.kt)("em",{parentName:"p"},"not")," been modified since this specified date/time will ",(0,n.kt)("em",{parentName:"p"},"not")," be replicated. Use the provided datepicker (recommended) or enter the desired date programmatically in the format ",(0,n.kt)("inlineCode",{parentName:"p"},"YYYY-MM-DDTHH:mm:ssZ"),". Leaving this field blank will replicate data from all files that have not been excluded by the ",(0,n.kt)("strong",{parentName:"p"},"Path Pattern")," and ",(0,n.kt)("strong",{parentName:"p"},"Path Prefix"),"."))),(0,n.kt)("h2",{id:"file-format-settings"},"File Format Settings"),(0,n.kt)("h3",{id:"csv"},"CSV"),(0,n.kt)("p",null,"Since CSV files are effectively plain text, providing specific reader options is often required for correct parsing of the files. These settings are applied when a CSV is created or exported so please ensure that this process happens consistently over time."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Header Definition"),": How headers will be defined. ",(0,n.kt)("inlineCode",{parentName:"li"},"User Provided")," assumes the CSV does not have a header row and uses the headers provided and ",(0,n.kt)("inlineCode",{parentName:"li"},"Autogenerated")," assumes the CSV does not have a header row and the CDK will generate headers using for ",(0,n.kt)("inlineCode",{parentName:"li"},"f{i}")," where ",(0,n.kt)("inlineCode",{parentName:"li"},"i"),' is the index starting from 0. Else, the default behavior is to use the header from the CSV file. If a user wants to autogenerate or provide column names for a CSV having headers, they can set a value for the "Skip rows before header" option to ignore the header row.'),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Delimiter"),": Even though CSV is an acronym for Comma Separated Values, it is used more generally as a term for flat file data that may or may not be comma separated. The delimiter field lets you specify which character acts as the separator. To use ",(0,n.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/Tab-separated_values"},"tab-delimiters"),", you can set this value to ",(0,n.kt)("inlineCode",{parentName:"li"},"\\t"),". By default, this value is set to ",(0,n.kt)("inlineCode",{parentName:"li"},","),"."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Double Quote"),": This option determines whether two quotes in a quoted CSV value denote a single quote in the data. Set to True by default."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Encoding"),": Some data may use a different character set ","(","typically when different alphabets are involved",")",". See the ",(0,n.kt)("a",{parentName:"li",href:"https://docs.python.org/3/library/codecs.html#standard-encodings"},"list of allowable encodings here"),". By default, this is set to ",(0,n.kt)("inlineCode",{parentName:"li"},"utf8"),"."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Escape Character"),": An escape character can be used to prefix a reserved character and ensure correct parsing. A commonly used character is the backslash (",(0,n.kt)("inlineCode",{parentName:"li"},"\\"),"). For example, given the following data:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},'Product,Description,Price\nJeans,"Navy Blue, Bootcut, 34\\"",49.99\n')),(0,n.kt)("p",null,"The backslash (",(0,n.kt)("inlineCode",{parentName:"p"},"\\"),") is used directly before the second double quote (",(0,n.kt)("inlineCode",{parentName:"p"},'"'),") to indicate that it is ",(0,n.kt)("em",{parentName:"p"},"not")," the closing quote for the field, but rather a literal double quote character that should be included in the value (in this example, denoting the size of the jeans in inches: ",(0,n.kt)("inlineCode",{parentName:"p"},'34"')," ). "),(0,n.kt)("p",null,"Leaving this field blank (default option) will disallow escaping."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"False Values"),": A set of case-sensitive strings that should be interpreted as false values."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Null Values"),": A set of case-sensitive strings that should be interpreted as null values. For example, if the value 'NA' should be interpreted as null, enter 'NA' in this field."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Quote Character"),": In some cases, data values may contain instances of reserved characters ","(","like a comma, if that's the delimiter",")",". CSVs can handle this by wrapping a value in defined quote characters so that on read it can parse it correctly. By default, this is set to ",(0,n.kt)("inlineCode",{parentName:"li"},'"'),"."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Skip Rows After Header"),": The number of rows to skip after the header row."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Skip Rows Before Header"),": The number of rows to skip before the header row."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Strings Can Be Null"),": Whether strings can be interpreted as null values. If true, strings that match the null_values set will be interpreted as null. If false, strings that match the null_values set will be interpreted as the string itself."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"True Values"),": A set of case-sensitive strings that should be interpreted as true values.")),(0,n.kt)("h3",{id:"parquet"},"Parquet"),(0,n.kt)("p",null,"Apache Parquet is a column-oriented data storage format of the Apache Hadoop ecosystem. It provides efficient data compression and encoding schemes with enhanced performance to handle complex data in bulk. At the moment, partitioned parquet datasets are unsupported. The following settings are available:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Convert Decimal Fields to Floats"),": Whether to convert decimal fields to floats. There is a loss of precision when converting decimals to floats, so this is not recommended.")),(0,n.kt)("h3",{id:"avro"},"Avro"),(0,n.kt)("p",null,"The Avro parser uses the ",(0,n.kt)("a",{parentName:"p",href:"https://fastavro.readthedocs.io/en/latest/"},"Fastavro library"),". The following settings are available:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Convert Double Fields to Strings"),": Whether to convert double fields to strings. This is recommended if you have decimal numbers with a high degree of precision because there can be a loss precision when handling floating point numbers.")),(0,n.kt)("h3",{id:"jsonl"},"JSONL"),(0,n.kt)("p",null,"There are currently no options for JSONL parsing."),(0,n.kt)("h2",{id:"changelog"},"Changelog"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Version"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Date"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Pull Request"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Subject"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"4.0.3"),(0,n.kt)("td",{parentName:"tr",align:"left"},"2023-09-13"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/30387"},"30387")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Bump Airbyte-CDK version to improve messages for record parse errors")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"4.0.2"),(0,n.kt)("td",{parentName:"tr",align:"left"},"2023-09-07"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/28639"},"28639")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Always show S3 Key fields")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"4.0.1"),(0,n.kt)("td",{parentName:"tr",align:"left"},"2023-09-06"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/30217"},"30217")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Migrate inference error to config errors and avoir sentry alerts")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"4.0.0"),(0,n.kt)("td",{parentName:"tr",align:"left"},"2023-09-05"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/29757"},"29757")),(0,n.kt)("td",{parentName:"tr",align:"left"},"New version using file-based CDK")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"3.1.11"),(0,n.kt)("td",{parentName:"tr",align:"left"},"2023-08-30"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/29986"},"29986")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Add config error for conversion error")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"3.1.10"),(0,n.kt)("td",{parentName:"tr",align:"left"},"2023-08-29"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/29943"},"29943")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Add config error for arrow invalid error")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"3.1.9"),(0,n.kt)("td",{parentName:"tr",align:"left"},"2023-08-23"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/29753"},"29753")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Feature parity update for V4 release")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"3.1.8"),(0,n.kt)("td",{parentName:"tr",align:"left"},"2023-08-17"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/29520"},"29520")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Update legacy state and error handling")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"3.1.7"),(0,n.kt)("td",{parentName:"tr",align:"left"},"2023-08-17"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/29505"},"29505")),(0,n.kt)("td",{parentName:"tr",align:"left"},"v4 StreamReader and Cursor fixes")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"3.1.6"),(0,n.kt)("td",{parentName:"tr",align:"left"},"2023-08-16"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/29480"},"29480")),(0,n.kt)("td",{parentName:"tr",align:"left"},"update Pyarrow to version 12.0.1")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"3.1.5"),(0,n.kt)("td",{parentName:"tr",align:"left"},"2023-08-15"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/29418"},"29418")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Avoid duplicate syncs when migrating from v3 to v4")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"3.1.4"),(0,n.kt)("td",{parentName:"tr",align:"left"},"2023-08-15"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/29382"},"29382")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Handle legacy path prefix & path pattern")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"3.1.3"),(0,n.kt)("td",{parentName:"tr",align:"left"},"2023-08-05"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/29028"},"29028")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Update v3 & v4 connector to handle either state message")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"3.1.2"),(0,n.kt)("td",{parentName:"tr",align:"left"},"2023-07-29"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/28786"},"28786")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Add a codepath for using the file-based CDK")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"3.1.1"),(0,n.kt)("td",{parentName:"tr",align:"left"},"2023-07-26"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/28730"},"28730")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Add human readable error message and improve validation for encoding field when it empty")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"3.1.0"),(0,n.kt)("td",{parentName:"tr",align:"left"},"2023-06-26"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/27725"},"27725")),(0,n.kt)("td",{parentName:"tr",align:"left"},"License Update: Elv2")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"3.0.3"),(0,n.kt)("td",{parentName:"tr",align:"left"},"2023-06-23"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/27651"},"27651")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Handle Bucket Access Errors")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"3.0.2"),(0,n.kt)("td",{parentName:"tr",align:"left"},"2023-06-22"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/27611"},"27611")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Fix start date")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"3.0.1"),(0,n.kt)("td",{parentName:"tr",align:"left"},"2023-06-22"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/27604"},"27604")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Add logging for file reading")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"3.0.0"),(0,n.kt)("td",{parentName:"tr",align:"left"},"2023-05-02"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/25127"},"25127")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Remove ab_additional column; Use platform-handled schema evolution")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"2.2.0"),(0,n.kt)("td",{parentName:"tr",align:"left"},"2023-05-10"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/25937"},"25937")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Add support for Parquet Dataset")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"2.1.4"),(0,n.kt)("td",{parentName:"tr",align:"left"},"2023-05-01"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/25361"},"25361")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Parse nested avro schemas")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"2.1.3"),(0,n.kt)("td",{parentName:"tr",align:"left"},"2023-05-01"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/25706"},"25706")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Remove minimum block size for CSV check")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"2.1.2"),(0,n.kt)("td",{parentName:"tr",align:"left"},"2023-04-18"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/25067"},"25067")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Handle block size related errors; fix config validator")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"2.1.1"),(0,n.kt)("td",{parentName:"tr",align:"left"},"2023-04-18"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/25010"},"25010")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Refactor filter logic")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"2.1.0"),(0,n.kt)("td",{parentName:"tr",align:"left"},"2023-04-10"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/25010"},"25010")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Add ",(0,n.kt)("inlineCode",{parentName:"td"},"start_date")," field to filter files based on ",(0,n.kt)("inlineCode",{parentName:"td"},"LastModified")," option")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"2.0.4"),(0,n.kt)("td",{parentName:"tr",align:"left"},"2023-03-23"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/24429"},"24429")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Call ",(0,n.kt)("inlineCode",{parentName:"td"},"check")," with a little block size to save time and memory.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"2.0.3"),(0,n.kt)("td",{parentName:"tr",align:"left"},"2023-03-17"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/24178"},"24178")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Support legacy datetime format for the period of migration, fix time-zone conversion.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"2.0.2"),(0,n.kt)("td",{parentName:"tr",align:"left"},"2023-03-16"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/24157"},"24157")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Return empty schema if ",(0,n.kt)("inlineCode",{parentName:"td"},"discover")," finds no files; Do not infer extra data types when user defined schema is applied.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"2.0.1"),(0,n.kt)("td",{parentName:"tr",align:"left"},"2023-03-06"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/23195"},"23195")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Fix datetime format string")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"2.0.0"),(0,n.kt)("td",{parentName:"tr",align:"left"},"2023-03-14"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/23189"},"23189")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Infer schema based on one file instead of all the files")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"1.0.2"),(0,n.kt)("td",{parentName:"tr",align:"left"},"2023-03-02"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/23669"},"23669")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Made ",(0,n.kt)("inlineCode",{parentName:"td"},"Advanced Reader Options")," and ",(0,n.kt)("inlineCode",{parentName:"td"},"Advanced Options")," truly ",(0,n.kt)("inlineCode",{parentName:"td"},"optional")," for ",(0,n.kt)("inlineCode",{parentName:"td"},"CSV")," format")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"1.0.1"),(0,n.kt)("td",{parentName:"tr",align:"left"},"2023-02-27"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/23502"},"23502")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Fix error handling")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"1.0.0"),(0,n.kt)("td",{parentName:"tr",align:"left"},"2023-02-17"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/23198"},"23198")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Fix Avro schema discovery")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"0.1.32"),(0,n.kt)("td",{parentName:"tr",align:"left"},"2023-02-07"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/22500"},"22500")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Speed up discovery")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"0.1.31"),(0,n.kt)("td",{parentName:"tr",align:"left"},"2023-02-08"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/22550"},"22550")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Validate CSV read options and convert options")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"0.1.30"),(0,n.kt)("td",{parentName:"tr",align:"left"},"2023-01-25"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/21587"},"21587")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Make sure spec works as expected in UI")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"0.1.29"),(0,n.kt)("td",{parentName:"tr",align:"left"},"2023-01-19"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/21604"},"21604")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Handle OSError: skip unreachable keys and keep working on accessible ones. Warn a customer")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"0.1.28"),(0,n.kt)("td",{parentName:"tr",align:"left"},"2023-01-10"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/21210"},"21210")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Update block size for json file format")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"0.1.27"),(0,n.kt)("td",{parentName:"tr",align:"left"},"2022-12-08"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/20262"},"20262")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Check config settings for CSV file format")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"0.1.26"),(0,n.kt)("td",{parentName:"tr",align:"left"},"2022-11-08"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/19006"},"19006")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Add virtual-hosted-style option")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"0.1.24"),(0,n.kt)("td",{parentName:"tr",align:"left"},"2022-10-28"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/18602"},"18602")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Wrap errors into AirbyteTracedException pointing to a problem file")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"0.1.23"),(0,n.kt)("td",{parentName:"tr",align:"left"},"2022-10-10"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/17991"},"17991")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Fix pyarrow to JSON schema type conversion for arrays")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"0.1.23"),(0,n.kt)("td",{parentName:"tr",align:"left"},"2022-10-10"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/17800"},"17800")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Deleted ",(0,n.kt)("inlineCode",{parentName:"td"},"use_ssl")," and ",(0,n.kt)("inlineCode",{parentName:"td"},"verify_ssl_cert")," flags and hardcoded to ",(0,n.kt)("inlineCode",{parentName:"td"},"True"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"0.1.22"),(0,n.kt)("td",{parentName:"tr",align:"left"},"2022-09-28"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/17304"},"17304")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Migrate to per-stream state")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"0.1.21"),(0,n.kt)("td",{parentName:"tr",align:"left"},"2022-09-20"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/16921"},"16921")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Upgrade pyarrow")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"0.1.20"),(0,n.kt)("td",{parentName:"tr",align:"left"},"2022-09-12"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/16607"},"16607")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Fix for reading jsonl files containing nested structures")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"0.1.19"),(0,n.kt)("td",{parentName:"tr",align:"left"},"2022-09-13"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/16631"},"16631")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Adjust column type to a broadest one when merging two or more json schemas")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"0.1.18"),(0,n.kt)("td",{parentName:"tr",align:"left"},"2022-08-01"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/14213"},"14213")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Add support for jsonl format files.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"0.1.17"),(0,n.kt)("td",{parentName:"tr",align:"left"},"2022-07-21"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/14911"},"14911")),(0,n.kt)("td",{parentName:"tr",align:"left"},'"decimal" type added for parquet')),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"0.1.16"),(0,n.kt)("td",{parentName:"tr",align:"left"},"2022-07-13"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/14669"},"14669")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Fixed bug when extra columns apeared to be non-present in master schema")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"0.1.15"),(0,n.kt)("td",{parentName:"tr",align:"left"},"2022-05-31"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/12568"},"12568")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Fixed possible case of files being missed during incremental syncs")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"0.1.14"),(0,n.kt)("td",{parentName:"tr",align:"left"},"2022-05-23"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/11967"},"11967")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Increase unit test coverage up to 90%")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"0.1.13"),(0,n.kt)("td",{parentName:"tr",align:"left"},"2022-05-11"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/12730"},"12730")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Fixed empty options issue")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"0.1.12"),(0,n.kt)("td",{parentName:"tr",align:"left"},"2022-05-11"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/12602"},"12602")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Added support for Avro file format")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"0.1.11"),(0,n.kt)("td",{parentName:"tr",align:"left"},"2022-04-30"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/12500"},"12500")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Improve input configuration copy")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"0.1.10"),(0,n.kt)("td",{parentName:"tr",align:"left"},"2022-01-28"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/8252"},"8252")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Refactoring of files' metadata")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"0.1.9"),(0,n.kt)("td",{parentName:"tr",align:"left"},"2022-01-06"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/9163"},"9163")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Work-around for web-UI, ",(0,n.kt)("inlineCode",{parentName:"td"},"backslash - t")," converts to ",(0,n.kt)("inlineCode",{parentName:"td"},"tab")," for ",(0,n.kt)("inlineCode",{parentName:"td"},"format.delimiter")," field.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"0.1.7"),(0,n.kt)("td",{parentName:"tr",align:"left"},"2021-11-08"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/7499"},"7499")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Remove base-python dependencies")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"0.1.6"),(0,n.kt)("td",{parentName:"tr",align:"left"},"2021-10-15"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/6615"},"6615")," & ",(0,n.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/7058"},"7058")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Memory and performance optimisation. Advanced options for CSV parsing.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"0.1.5"),(0,n.kt)("td",{parentName:"tr",align:"left"},"2021-09-24"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/6398"},"6398")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Support custom non Amazon S3 services")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"0.1.4"),(0,n.kt)("td",{parentName:"tr",align:"left"},"2021-08-13"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/5305"},"5305")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Support of Parquet format")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"0.1.3"),(0,n.kt)("td",{parentName:"tr",align:"left"},"2021-08-04"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/5197"},"5197")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Fixed bug where sync could hang indefinitely on schema inference")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"0.1.2"),(0,n.kt)("td",{parentName:"tr",align:"left"},"2021-08-02"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/5135"},"5135")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Fixed bug in spec so it displays in UI correctly")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"0.1.1"),(0,n.kt)("td",{parentName:"tr",align:"left"},"2021-07-30"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/4990/commits/ff5f70662c5f84eabc03526cddfcc9d73c58c0f4"},"4990")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Fixed documentation url in source definition")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"0.1.0"),(0,n.kt)("td",{parentName:"tr",align:"left"},"2021-07-30"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://github.com/airbytehq/airbyte/pull/4990"},"4990")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Created S3 source connector")))))}k.isMDXComponent=!0},3905:(t,e,a)=>{a.d(e,{Zo:()=>m,kt:()=>h});var r=a(67294);function n(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function i(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,r)}return a}function l(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?i(Object(a),!0).forEach((function(e){n(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function o(t,e){if(null==t)return{};var a,r,n=function(t,e){if(null==t)return{};var a,r,n={},i=Object.keys(t);for(r=0;r<i.length;r++)a=i[r],e.indexOf(a)>=0||(n[a]=t[a]);return n}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(r=0;r<i.length;r++)a=i[r],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(n[a]=t[a])}return n}var p=r.createContext({}),s=function(t){var e=r.useContext(p),a=e;return t&&(a="function"==typeof t?t(e):l(l({},e),t)),a},m=function(t){var e=s(t.components);return r.createElement(p.Provider,{value:e},t.children)},d="mdxType",k={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},f=r.forwardRef((function(t,e){var a=t.components,n=t.mdxType,i=t.originalType,p=t.parentName,m=o(t,["components","mdxType","originalType","parentName"]),d=s(a),f=n,h=d["".concat(p,".").concat(f)]||d[f]||k[f]||i;return a?r.createElement(h,l(l({ref:e},m),{},{components:a})):r.createElement(h,l({ref:e},m))}));function h(t,e){var a=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var i=a.length,l=new Array(i);l[0]=f;var o={};for(var p in e)hasOwnProperty.call(e,p)&&(o[p]=e[p]);o.originalType=t,o[d]="string"==typeof t?t:n,l[1]=o;for(var s=2;s<i;s++)l[s]=a[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}f.displayName="MDXCreateElement"}}]);